# Default values for flask-app.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 3

image:
  registry: docker.io
  repository: behzad1991/flask-app
  tag: 1.2
  pullPolicy: Always

database: 
## @param database.secretFile Use existing secret for password details (`database.password`, `database.username` will be ignored and picked up from this secret). The secret has to contain the keys `password` and `username` for database

  secretFile: 
  username: flask
  password: flaskapp

## @param database.configmap Name of existing ConfigMap with MariaDB  configuration.
## NOTE: When it's set the 'configuration' parameter is ignored

  configmap: game-demo 
  host: 
  port: 
  name: 



flask:
## @param flask.configmap Name of existing ConfigMap with flask app configuration.
## NOTE: When it's set the 'configuration' parameter is ignored

  configmap: flaskconf
  host: 
  port: 


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 5000

ingress:
  enabled: true
  className: "nginx"
  annotations: 
     spec.ingressClassName: nginx
  hosts:
    - host: behzad.ir
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  httpGet:
    path: /users
    port: 5000
readinessProbe:
  httpGet:
    path: /users
    port: 5000

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
